apiVersion: apps/v1
kind: Deployment
metadata:
  name: scan-worker
  namespace: azuredocs-app
  labels:
    app: scan-worker
    component: worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: scan-worker
  template:
    metadata:
      labels:
        app: scan-worker
        component: worker
        azure.workload.identity/use: "true"
    spec:
      priorityClassName: worker-normal-priority
      serviceAccountName: sc-account-fefa7dd8-f9d3-4524-8a35-c1123a838df0
      containers:
      - name: scan-worker
        image: seanmckdemo.azurecr.io/queue-worker:0.0.56
        imagePullPolicy: Always
        command: ["python", "worker/queue_worker.py"]
        env:
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: azuredocs-secrets
              key: ADMIN_PASSWORD
        - name: ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: azuredocs-secrets
              key: ADMIN_USERNAME
        - name: APP_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: azuredocs-secrets
              key: APP_SECRET_KEY
        - name: PYTHONPATH
          value: "/app"
        - name: RABBITMQ_HOST
          value: "rabbitmq"
        - name: RABBITMQ_PORT
          value: "5672"
        - name: RABBITMQ_USERNAME
          valueFrom:
            secretKeyRef:
              name: azuredocs-secrets
              key: RABBITMQ_USERNAME
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: azuredocs-secrets
              key: RABBITMQ_PASSWORD
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: azuredocs-secrets
              key: GITHUB_TOKEN
        - name: AZURE_OPENAI_DEPLOYMENT
          value: "gpt-4.1"
        - name: MCP_SERVER_URL
          value: "http://mcp-server:9000/score_page"
        envFrom:
        - secretRef:
            name: sc-azuredocsdbconnection-secret
        - secretRef:
            name: sc-linuxdocsazureopenai-secret
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "import sys; sys.exit(0)"
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - python
            - -c
            - "import sys; sys.exit(0)"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: secrets-store
          mountPath: "/mnt/secrets-store"
          readOnly: true
      volumes:
      - name: secrets-store
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "azuredocs-secrets"
      restartPolicy: Always
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: scan-worker-scaler
  namespace: azuredocs-app
spec:
  scaleTargetRef:
    name: scan-worker
  minReplicaCount: 1
  maxReplicaCount: 3
  cooldownPeriod: 300
  triggers:
  - type: rabbitmq
    metadata:
      queueName: scan_tasks
      mode: QueueLength
      value: "1"
    authenticationRef:
      name: rabbitmq-trigger-auth
